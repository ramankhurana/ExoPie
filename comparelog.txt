## number of events after first round of sync, and all the weights applied

muon region:  8107.15
electron region: 5957.36


## PU reweighting bug found and fixed, new numbers are: 








Questions for Praveen: 

## check the lepton ID, iso for cleaning against jets 

## reco eff SF for pt< 25 GeV, where did you find the range to be 25-500? 

## 






## To do for Praveen: 

1. is the pileup.root official, or checked with someone that this is all ok? and did you check that from twiki how to apply the weights? e.g. which one is correct: 
puweight = pileup2016histo.GetBinContent(pu_nTrueInt)
or 
puweight = pileup2016histo.GetBinContent(pu_nTrueInt-1)

please look at the PU reweight twiki and confirm this is done correctly? 


2. genparticle p4 needs to be converted into px, py, pz, E in order to make my setup work on this, 

3. kfactor.py missing in the repository 

4.  do you know GetBinContent takes only integer values, and I guess pu_nTrueInt is a float, do you know how root typecast this number automatically? 

5. To make the process faster, can you print the bin edges of each of the 2d histograms used for SF, and make python lists like
etabins=[-2.5,-2,1, -1.5, -1.4, -0.8, 0.0, 0.8, 1.4, 1.5, 2.1, 2.5] (check carefully this is just a guess)
ptbins=[]

and share them, 

6. Next useful thing would  be to read all 2D histograms used for SFs, and make them a 2d array, e.g. 

sf[0][0] = 0.9
sf[0][1] = 0.95 

where first index  [] is X axis of the plot and second index [] is Y axis of the plot, 

 I wrote the plugin to use 5 and 6 above and make this SF reading faster. 

7. compare with code pointed by Deborah, if everything is ok in our code, in case  needed here is the base code, 
https://github.com/UZHCMS from where some of the packages are taken, 

8. please check the id for ele and mu used for the vetoing leptons

 /eos/cms/store/group/phys_exotica/bbMET/2016_skimmer/tDM_06052019

9. Run the mergetool to get the merged files,  

10. From this version onwards, (at least for the Skimmed and Analysis tuples) please use following instruction to name the directory structure, 
   - Dir to keep the DelPanj Tuples: FatTuples_2016_V0: first digit for major changes
   - Dir to keep the SkimeFiles: SkimmedTuples_2016_V0p0: first digit for the  FatTuples version number and second digit for the number of times skimming is running. 
   - Dir to keep the BranchReader analysis files: AnalysisTuples_2016_V0p0p0: Fattuple . Skimming . Analysis 

11. Write the path to all the tuples with a change log in the table made in the Twiki. 

## To do for Deepak: 
1. check that it works for all the paths 
2. do you know merging using 

root://eoscms.cern.ch//eos/cms/store/group/phys_exotica/bbMET/2016_skimmer/tDM_06052019/DYJetsToLL_M-50_HT-600to800_TuneCUETP8M1_13TeV-madgraphMLM-pythia8_MC25ns_LegacyMC_20170328_0000/SkimmedTree_3.root


is slower w.r.t 

/eos/cms/store/group/phys_exotica/bbMET/2016_skimmer/tDM_06052019/DYJetsToLL_M-50_HT-600to800_TuneCUETP8M1_13TeV-madgraphMLM-pythia8_MC25ns_LegacyMC_20170328_0000/SkimmedTree_3.root

i think reason is due to the fact first one uses some protocol and that take non-zero time 



/eos/cms/store/group/phys_exotica/bbMET/2016_skimmer/



3. right now it directly write to eos, and eos is not made for this, you ahve to merge it in some other area, /tmp or work area and once one file is merged move it to eos, i think that is what makes it super slow, 


4. another thing is it doesn't merge all the data files into one, it is possible to add this feature? 


## For Raman
so the package is almost complete now, (two major items remaining), here is plan for tomorrow 

- once you will give me the new skimmed rootfiles
- i can do the merging of skimmed files and then
- generate maps for the event weight [1] 
- will change the veto and cleaning ID for electrons and remove the Jet iD
- we will sync on ~30 K events like earlier 
- run the analyzer for Wenu and Wmunu CR
- make the stack plots [2]

[1]: right now event weight is only cross-section and lumi, other event weight are remaining 
[2]: only the histo are visible, errors ratio etc need to be added, 

in-spite of these two items remaining, i will run the full chain once and see how it goes, 

as i said i will not have time to implement [1] and [2]. in case you want to see the code and implement (if have time) let me know, you can be helpful in both cases, I know how to do [1], but i still need to search how to do [2]. 


